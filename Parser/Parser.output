State 184 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl decls

    2 decls: /* empty */
    3      | decl decls

    4 decl: variableDecl
    5     | functionDecl
    6     | classDecl
    7     | interfaceDecl

    8 variableDecls: /* empty */
    9              | variableDecls variableDecl

   10 variableDecl: variable ';'

   11 variable: type T_ID

   12 type: T_INT
   13     | T_DOUBLE
   14     | T_BOOL
   15     | T_STRING
   16     | T_ID
   17     | type PAIREDBRACES

   18 functionDecl: type T_ID '(' formals ')' stmtBlock
   19             | T_VOID T_ID '(' formals ')' stmtBlock

   20 formals: /* empty */
   21        | variable csVariable

   22 csVariable: /* empty */
   23           | csVariable ',' variable

   24 classDecl: T_CLASS T_ID optExt optImp '{' fields '}'

   25 optExt: /* empty */
   26       | T_EXTENDS T_ID

   27 optImp: /* empty */
   28       | T_IMPLEMENTS T_ID csID

   29 csID: /* empty */
   30     | csID ',' T_ID

   31 fields: /* empty */
   32       | field fields

   33 field: variableDecl
   34      | functionDecl

   35 interfaceDecl: T_INTERFACE T_ID '{' prototypes '}'

   36 prototypes: /* empty */
   37           | prototype prototypes

   38 prototype: type T_ID '{' formals '}' ';'
   39          | T_VOID T_ID '(' formals ')' ';'

   40 stmtBlock: '{' variableDecls stmts '}'

   41 stmts: /* empty */
   42      | stmt stmts

   43 stmt: optExpr ';'
   44     | ifStmt
   45     | whileStmt
   46     | forStmt
   47     | breakStmt
   48     | returnStmt
   49     | printStmt
   50     | stmtBlock

   51 optExpr: /* empty */
   52        | expr

   53 ifStmt: T_IF '(' expr ')' stmt optElse

   54 optElse: /* empty */
   55        | T_ELSE stmt

   56 whileStmt: T_WHILE '(' expr ')' stmt

   57 forStmt: T_FOR '(' optExpr ';' expr ';' optExpr ')' stmt

   58 returnStmt: T_RETURN optExpr ';'

   59 breakStmt: T_BREAK ';'

   60 printStmt: T_PRINT '(' expr csExpr ')' ';'

   61 csExpr: /* empty */
   62       | csExpr ',' expr

   63 expr: lvalue '=' expr
   64     | constant
   65     | lvalue
   66     | T_THIS
   67     | call
   68     | '(' expr ')'
   69     | expr '+' expr
   70     | expr '-' expr
   71     | expr '*' expr
   72     | expr '/' expr
   73     | expr '%' expr
   74     | '-' expr
   75     | expr '<' expr
   76     | expr T_LEQ expr
   77     | expr '>' expr
   78     | expr T_BEQ expr
   79     | expr T_EQ expr
   80     | expr T_NEQ expr
   81     | expr T_AND expr
   82     | expr T_OR expr
   83     | '!' expr
   84     | T_READINTEGER '(' ')'
   85     | T_READLINE '(' ')'
   86     | T_NEW T_ID
   87     | T_NEWARRAY '(' expr ',' type ')'

   88 lvalue: T_ID
   89       | expr '.' T_ID
   90       | expr '[' expr ']'

   91 call: T_ID '(' actuals ')'
   92     | expr '.' T_ID '(' actuals ')'

   93 actuals: /* empty */
   94        | expr csExpr

   95 constant: T_INTCONSTANT
   96         | T_DOUBLECONSTANT
   97         | T_BOOLCONSTANT
   98         | T_STRINGCONSTANT
   99         | T_NULL


Terminals, with rules where they appear

$end (0) 0
'!' (33) 83
'%' (37) 73
'(' (40) 18 19 39 53 56 57 60 68 84 85 87 91 92
')' (41) 18 19 39 53 56 57 60 68 84 85 87 91 92
'*' (42) 71
'+' (43) 69
',' (44) 23 30 62 87
'-' (45) 70 74
'.' (46) 89 92
'/' (47) 72
';' (59) 10 38 39 43 57 58 59 60
'<' (60) 75
'=' (61) 63
'>' (62) 77
'[' (91) 90
']' (93) 90
'{' (123) 24 35 38 40
'}' (125) 24 35 38 40
error (256)
T_OR (258) 82
T_AND (259) 81
T_NEQ (260) 80
T_EQ (261) 79
T_BEQ (262) 78
T_LEQ (263) 76
T_UNARYMINUS (264)
PAIREDBRACES (265) 17
T_ID (266) 11 16 18 19 24 26 28 30 35 38 39 86 88 89 91 92
T_VOID (267) 19 39
T_INT (268) 12
T_DOUBLE (269) 13
T_BOOL (270) 14
T_STRING (271) 15
T_CLASS (272) 24
T_INTERFACE (273) 35
T_NULL (274) 99
T_THIS (275) 66
T_EXTENDS (276) 26
T_IMPLEMENTS (277) 28
T_FOR (278) 57
T_WHILE (279) 56
T_IF (280) 53
T_ELSE (281) 55
T_RETURN (282) 58
T_BREAK (283) 59
T_NEW (284) 86
T_NEWARRAY (285) 87
T_PRINT (286) 60
T_READINTEGER (287) 84
T_READLINE (288) 85
T_INTCONSTANT (289) 95
T_DOUBLECONSTANT (290) 96
T_STRINGCONSTANT (291) 98
T_BOOLCONSTANT (292) 97


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
decls (58)
    on left: 2 3, on right: 1 3
decl (59)
    on left: 4 5 6 7, on right: 1 3
variableDecls (60)
    on left: 8 9, on right: 9 40
variableDecl (61)
    on left: 10, on right: 4 9 33
variable (62)
    on left: 11, on right: 10 21 23
type (63)
    on left: 12 13 14 15 16 17, on right: 11 17 18 38 87
functionDecl (64)
    on left: 18 19, on right: 5 34
formals (65)
    on left: 20 21, on right: 18 19 38 39
csVariable (66)
    on left: 22 23, on right: 21 23
classDecl (67)
    on left: 24, on right: 6
optExt (68)
    on left: 25 26, on right: 24
optImp (69)
    on left: 27 28, on right: 24
csID (70)
    on left: 29 30, on right: 28 30
fields (71)
    on left: 31 32, on right: 24 32
field (72)
    on left: 33 34, on right: 32
interfaceDecl (73)
    on left: 35, on right: 7
prototypes (74)
    on left: 36 37, on right: 35 37
prototype (75)
    on left: 38 39, on right: 37
stmtBlock (76)
    on left: 40, on right: 18 19 50
stmts (77)
    on left: 41 42, on right: 40 42
stmt (78)
    on left: 43 44 45 46 47 48 49 50, on right: 42 53 55 56 57
optExpr (79)
    on left: 51 52, on right: 43 57 58
ifStmt (80)
    on left: 53, on right: 44
optElse (81)
    on left: 54 55, on right: 53
whileStmt (82)
    on left: 56, on right: 45
forStmt (83)
    on left: 57, on right: 46
returnStmt (84)
    on left: 58, on right: 48
breakStmt (85)
    on left: 59, on right: 47
printStmt (86)
    on left: 60, on right: 49
csExpr (87)
    on left: 61 62, on right: 60 62 94
expr (88)
    on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
    81 82 83 84 85 86 87, on right: 52 53 56 57 60 62 63 68 69 70 71
    72 73 74 75 76 77 78 79 80 81 82 83 87 89 90 92 94
lvalue (89)
    on left: 88 89 90, on right: 63 65
call (90)
    on left: 91 92, on right: 67
actuals (91)
    on left: 93 94, on right: 91 92
constant (92)
    on left: 95 96 97 98 99, on right: 64


state 0

    0 $accept: . program $end

    T_ID         shift, and go to state 1
    T_VOID       shift, and go to state 2
    T_INT        shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_BOOL       shift, and go to state 5
    T_STRING     shift, and go to state 6
    T_CLASS      shift, and go to state 7
    T_INTERFACE  shift, and go to state 8

    program        go to state 9
    decl           go to state 10
    variableDecl   go to state 11
    variable       go to state 12
    type           go to state 13
    functionDecl   go to state 14
    classDecl      go to state 15
    interfaceDecl  go to state 16


state 1

   16 type: T_ID .

    $default  reduce using rule 16 (type)


state 2

   19 functionDecl: T_VOID . T_ID '(' formals ')' stmtBlock

    T_ID  shift, and go to state 17


state 3

   12 type: T_INT .

    $default  reduce using rule 12 (type)


state 4

   13 type: T_DOUBLE .

    $default  reduce using rule 13 (type)


state 5

   14 type: T_BOOL .

    $default  reduce using rule 14 (type)


state 6

   15 type: T_STRING .

    $default  reduce using rule 15 (type)


state 7

   24 classDecl: T_CLASS . T_ID optExt optImp '{' fields '}'

    T_ID  shift, and go to state 18


state 8

   35 interfaceDecl: T_INTERFACE . T_ID '{' prototypes '}'

    T_ID  shift, and go to state 19


state 9

    0 $accept: program . $end

    $end  shift, and go to state 20


state 10

    1 program: decl . decls

    T_ID         shift, and go to state 1
    T_VOID       shift, and go to state 2
    T_INT        shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_BOOL       shift, and go to state 5
    T_STRING     shift, and go to state 6
    T_CLASS      shift, and go to state 7
    T_INTERFACE  shift, and go to state 8

    $default  reduce using rule 2 (decls)

    decls          go to state 21
    decl           go to state 22
    variableDecl   go to state 11
    variable       go to state 12
    type           go to state 13
    functionDecl   go to state 14
    classDecl      go to state 15
    interfaceDecl  go to state 16


state 11

    4 decl: variableDecl .

    $default  reduce using rule 4 (decl)


state 12

   10 variableDecl: variable . ';'

    ';'  shift, and go to state 23


state 13

   11 variable: type . T_ID
   17 type: type . PAIREDBRACES
   18 functionDecl: type . T_ID '(' formals ')' stmtBlock

    PAIREDBRACES  shift, and go to state 24
    T_ID          shift, and go to state 25


state 14

    5 decl: functionDecl .

    $default  reduce using rule 5 (decl)


state 15

    6 decl: classDecl .

    $default  reduce using rule 6 (decl)


state 16

    7 decl: interfaceDecl .

    $default  reduce using rule 7 (decl)


state 17

   19 functionDecl: T_VOID T_ID . '(' formals ')' stmtBlock

    '('  shift, and go to state 26


state 18

   24 classDecl: T_CLASS T_ID . optExt optImp '{' fields '}'

    T_EXTENDS  shift, and go to state 27

    $default  reduce using rule 25 (optExt)

    optExt  go to state 28


state 19

   35 interfaceDecl: T_INTERFACE T_ID . '{' prototypes '}'

    '{'  shift, and go to state 29


state 20

    0 $accept: program $end .

    $default  accept


state 21

    1 program: decl decls .

    $default  reduce using rule 1 (program)


state 22

    3 decls: decl . decls

    T_ID         shift, and go to state 1
    T_VOID       shift, and go to state 2
    T_INT        shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_BOOL       shift, and go to state 5
    T_STRING     shift, and go to state 6
    T_CLASS      shift, and go to state 7
    T_INTERFACE  shift, and go to state 8

    $default  reduce using rule 2 (decls)

    decls          go to state 30
    decl           go to state 22
    variableDecl   go to state 11
    variable       go to state 12
    type           go to state 13
    functionDecl   go to state 14
    classDecl      go to state 15
    interfaceDecl  go to state 16


state 23

   10 variableDecl: variable ';' .

    $default  reduce using rule 10 (variableDecl)


state 24

   17 type: type PAIREDBRACES .

    $default  reduce using rule 17 (type)


state 25

   11 variable: type T_ID .
   18 functionDecl: type T_ID . '(' formals ')' stmtBlock

    '('  shift, and go to state 31

    $default  reduce using rule 11 (variable)


state 26

   19 functionDecl: T_VOID T_ID '(' . formals ')' stmtBlock

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 20 (formals)

    variable  go to state 32
    type      go to state 33
    formals   go to state 34


state 27

   26 optExt: T_EXTENDS . T_ID

    T_ID  shift, and go to state 35


state 28

   24 classDecl: T_CLASS T_ID optExt . optImp '{' fields '}'

    T_IMPLEMENTS  shift, and go to state 36

    $default  reduce using rule 27 (optImp)

    optImp  go to state 37


state 29

   35 interfaceDecl: T_INTERFACE T_ID '{' . prototypes '}'

    T_ID      shift, and go to state 1
    T_VOID    shift, and go to state 38
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 36 (prototypes)

    type        go to state 39
    prototypes  go to state 40
    prototype   go to state 41


state 30

    3 decls: decl decls .

    $default  reduce using rule 3 (decls)


state 31

   18 functionDecl: type T_ID '(' . formals ')' stmtBlock

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 20 (formals)

    variable  go to state 32
    type      go to state 33
    formals   go to state 42


state 32

   21 formals: variable . csVariable

    $default  reduce using rule 22 (csVariable)

    csVariable  go to state 43


state 33

   11 variable: type . T_ID
   17 type: type . PAIREDBRACES

    PAIREDBRACES  shift, and go to state 24
    T_ID          shift, and go to state 44


state 34

   19 functionDecl: T_VOID T_ID '(' formals . ')' stmtBlock

    ')'  shift, and go to state 45


state 35

   26 optExt: T_EXTENDS T_ID .

    $default  reduce using rule 26 (optExt)


state 36

   28 optImp: T_IMPLEMENTS . T_ID csID

    T_ID  shift, and go to state 46


state 37

   24 classDecl: T_CLASS T_ID optExt optImp . '{' fields '}'

    '{'  shift, and go to state 47


state 38

   39 prototype: T_VOID . T_ID '(' formals ')' ';'

    T_ID  shift, and go to state 48


state 39

   17 type: type . PAIREDBRACES
   38 prototype: type . T_ID '{' formals '}' ';'

    PAIREDBRACES  shift, and go to state 24
    T_ID          shift, and go to state 49


state 40

   35 interfaceDecl: T_INTERFACE T_ID '{' prototypes . '}'

    '}'  shift, and go to state 50


state 41

   37 prototypes: prototype . prototypes

    T_ID      shift, and go to state 1
    T_VOID    shift, and go to state 38
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 36 (prototypes)

    type        go to state 39
    prototypes  go to state 51
    prototype   go to state 41


state 42

   18 functionDecl: type T_ID '(' formals . ')' stmtBlock

    ')'  shift, and go to state 52


state 43

   21 formals: variable csVariable .
   23 csVariable: csVariable . ',' variable

    ','  shift, and go to state 53

    $default  reduce using rule 21 (formals)


state 44

   11 variable: type T_ID .

    $default  reduce using rule 11 (variable)


state 45

   19 functionDecl: T_VOID T_ID '(' formals ')' . stmtBlock

    '{'  shift, and go to state 54

    stmtBlock  go to state 55


state 46

   28 optImp: T_IMPLEMENTS T_ID . csID

    $default  reduce using rule 29 (csID)

    csID  go to state 56


state 47

   24 classDecl: T_CLASS T_ID optExt optImp '{' . fields '}'

    T_ID      shift, and go to state 1
    T_VOID    shift, and go to state 2
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 31 (fields)

    variableDecl  go to state 57
    variable      go to state 12
    type          go to state 13
    functionDecl  go to state 58
    fields        go to state 59
    field         go to state 60


state 48

   39 prototype: T_VOID T_ID . '(' formals ')' ';'

    '('  shift, and go to state 61


state 49

   38 prototype: type T_ID . '{' formals '}' ';'

    '{'  shift, and go to state 62


state 50

   35 interfaceDecl: T_INTERFACE T_ID '{' prototypes '}' .

    $default  reduce using rule 35 (interfaceDecl)


state 51

   37 prototypes: prototype prototypes .

    $default  reduce using rule 37 (prototypes)


state 52

   18 functionDecl: type T_ID '(' formals ')' . stmtBlock

    '{'  shift, and go to state 54

    stmtBlock  go to state 63


state 53

   23 csVariable: csVariable ',' . variable

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    variable  go to state 64
    type      go to state 33


state 54

   40 stmtBlock: '{' . variableDecls stmts '}'

    $default  reduce using rule 8 (variableDecls)

    variableDecls  go to state 65


state 55

   19 functionDecl: T_VOID T_ID '(' formals ')' stmtBlock .

    $default  reduce using rule 19 (functionDecl)


state 56

   28 optImp: T_IMPLEMENTS T_ID csID .
   30 csID: csID . ',' T_ID

    ','  shift, and go to state 66

    $default  reduce using rule 28 (optImp)


state 57

   33 field: variableDecl .

    $default  reduce using rule 33 (field)


state 58

   34 field: functionDecl .

    $default  reduce using rule 34 (field)


state 59

   24 classDecl: T_CLASS T_ID optExt optImp '{' fields . '}'

    '}'  shift, and go to state 67


state 60

   32 fields: field . fields

    T_ID      shift, and go to state 1
    T_VOID    shift, and go to state 2
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 31 (fields)

    variableDecl  go to state 57
    variable      go to state 12
    type          go to state 13
    functionDecl  go to state 58
    fields        go to state 68
    field         go to state 60


state 61

   39 prototype: T_VOID T_ID '(' . formals ')' ';'

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 20 (formals)

    variable  go to state 32
    type      go to state 33
    formals   go to state 69


state 62

   38 prototype: type T_ID '{' . formals '}' ';'

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    $default  reduce using rule 20 (formals)

    variable  go to state 32
    type      go to state 33
    formals   go to state 70


state 63

   18 functionDecl: type T_ID '(' formals ')' stmtBlock .

    $default  reduce using rule 18 (functionDecl)


state 64

   23 csVariable: csVariable ',' variable .

    $default  reduce using rule 23 (csVariable)


state 65

    9 variableDecls: variableDecls . variableDecl
   40 stmtBlock: '{' variableDecls . stmts '}'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 74
    T_INT             shift, and go to state 3
    T_DOUBLE          shift, and go to state 4
    T_BOOL            shift, and go to state 5
    T_STRING          shift, and go to state 6
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_FOR             shift, and go to state 77
    T_WHILE           shift, and go to state 78
    T_IF              shift, and go to state 79
    T_RETURN          shift, and go to state 80
    T_BREAK           shift, and go to state 81
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_PRINT           shift, and go to state 84
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90
    '{'               shift, and go to state 54

    ';'       reduce using rule 51 (optExpr)
    $default  reduce using rule 41 (stmts)

    variableDecl  go to state 91
    variable      go to state 12
    type          go to state 33
    stmtBlock     go to state 92
    stmts         go to state 93
    stmt          go to state 94
    optExpr       go to state 95
    ifStmt        go to state 96
    whileStmt     go to state 97
    forStmt       go to state 98
    returnStmt    go to state 99
    breakStmt     go to state 100
    printStmt     go to state 101
    expr          go to state 102
    lvalue        go to state 103
    call          go to state 104
    constant      go to state 105


state 66

   30 csID: csID ',' . T_ID

    T_ID  shift, and go to state 106


state 67

   24 classDecl: T_CLASS T_ID optExt optImp '{' fields '}' .

    $default  reduce using rule 24 (classDecl)


state 68

   32 fields: field fields .

    $default  reduce using rule 32 (fields)


state 69

   39 prototype: T_VOID T_ID '(' formals . ')' ';'

    ')'  shift, and go to state 107


state 70

   38 prototype: type T_ID '{' formals . '}' ';'

    '}'  shift, and go to state 108


state 71

   74 expr: '-' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 110
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 72

   83 expr: '!' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 111
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 73

   68 expr: '(' . expr ')'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 112
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 74

   16 type: T_ID .
   88 lvalue: T_ID .
   91 call: T_ID . '(' actuals ')'

    '('  shift, and go to state 113

    PAIREDBRACES  reduce using rule 16 (type)
    T_ID          reduce using rule 16 (type)
    $default      reduce using rule 88 (lvalue)


state 75

   99 constant: T_NULL .

    $default  reduce using rule 99 (constant)


state 76

   66 expr: T_THIS .

    $default  reduce using rule 66 (expr)


state 77

   57 forStmt: T_FOR . '(' optExpr ';' expr ';' optExpr ')' stmt

    '('  shift, and go to state 114


state 78

   56 whileStmt: T_WHILE . '(' expr ')' stmt

    '('  shift, and go to state 115


state 79

   53 ifStmt: T_IF . '(' expr ')' stmt optElse

    '('  shift, and go to state 116


state 80

   58 returnStmt: T_RETURN . optExpr ';'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    $default  reduce using rule 51 (optExpr)

    optExpr   go to state 117
    expr      go to state 102
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 81

   59 breakStmt: T_BREAK . ';'

    ';'  shift, and go to state 118


state 82

   86 expr: T_NEW . T_ID

    T_ID  shift, and go to state 119


state 83

   87 expr: T_NEWARRAY . '(' expr ',' type ')'

    '('  shift, and go to state 120


state 84

   60 printStmt: T_PRINT . '(' expr csExpr ')' ';'

    '('  shift, and go to state 121


state 85

   84 expr: T_READINTEGER . '(' ')'

    '('  shift, and go to state 122


state 86

   85 expr: T_READLINE . '(' ')'

    '('  shift, and go to state 123


state 87

   95 constant: T_INTCONSTANT .

    $default  reduce using rule 95 (constant)


state 88

   96 constant: T_DOUBLECONSTANT .

    $default  reduce using rule 96 (constant)


state 89

   98 constant: T_STRINGCONSTANT .

    $default  reduce using rule 98 (constant)


state 90

   97 constant: T_BOOLCONSTANT .

    $default  reduce using rule 97 (constant)


state 91

    9 variableDecls: variableDecls variableDecl .

    $default  reduce using rule 9 (variableDecls)


state 92

   50 stmt: stmtBlock .

    $default  reduce using rule 50 (stmt)


state 93

   40 stmtBlock: '{' variableDecls stmts . '}'

    '}'  shift, and go to state 124


state 94

   42 stmts: stmt . stmts

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_FOR             shift, and go to state 77
    T_WHILE           shift, and go to state 78
    T_IF              shift, and go to state 79
    T_RETURN          shift, and go to state 80
    T_BREAK           shift, and go to state 81
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_PRINT           shift, and go to state 84
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90
    '{'               shift, and go to state 54

    ';'       reduce using rule 51 (optExpr)
    $default  reduce using rule 41 (stmts)

    stmtBlock   go to state 92
    stmts       go to state 125
    stmt        go to state 94
    optExpr     go to state 95
    ifStmt      go to state 96
    whileStmt   go to state 97
    forStmt     go to state 98
    returnStmt  go to state 99
    breakStmt   go to state 100
    printStmt   go to state 101
    expr        go to state 102
    lvalue      go to state 103
    call        go to state 104
    constant    go to state 105


state 95

   43 stmt: optExpr . ';'

    ';'  shift, and go to state 126


state 96

   44 stmt: ifStmt .

    $default  reduce using rule 44 (stmt)


state 97

   45 stmt: whileStmt .

    $default  reduce using rule 45 (stmt)


state 98

   46 stmt: forStmt .

    $default  reduce using rule 46 (stmt)


state 99

   48 stmt: returnStmt .

    $default  reduce using rule 48 (stmt)


state 100

   47 stmt: breakStmt .

    $default  reduce using rule 47 (stmt)


state 101

   49 stmt: printStmt .

    $default  reduce using rule 49 (stmt)


state 102

   52 optExpr: expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 52 (optExpr)


state 103

   63 expr: lvalue . '=' expr
   65     | lvalue .

    '='  shift, and go to state 142

    $default  reduce using rule 65 (expr)


state 104

   67 expr: call .

    $default  reduce using rule 67 (expr)


state 105

   64 expr: constant .

    $default  reduce using rule 64 (expr)


state 106

   30 csID: csID ',' T_ID .

    $default  reduce using rule 30 (csID)


state 107

   39 prototype: T_VOID T_ID '(' formals ')' . ';'

    ';'  shift, and go to state 143


state 108

   38 prototype: type T_ID '{' formals '}' . ';'

    ';'  shift, and go to state 144


state 109

   88 lvalue: T_ID .
   91 call: T_ID . '(' actuals ')'

    '('  shift, and go to state 113

    $default  reduce using rule 88 (lvalue)


state 110

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   74     | '-' expr .
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 74 (expr)


state 111

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   83     | '!' expr .
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 83 (expr)


state 112

   68 expr: '(' expr . ')'
   69     | expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141
    ')'    shift, and go to state 145


state 113

   91 call: T_ID '(' . actuals ')'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    $default  reduce using rule 93 (actuals)

    expr      go to state 146
    lvalue    go to state 103
    call      go to state 104
    actuals   go to state 147
    constant  go to state 105


state 114

   57 forStmt: T_FOR '(' . optExpr ';' expr ';' optExpr ')' stmt

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    $default  reduce using rule 51 (optExpr)

    optExpr   go to state 148
    expr      go to state 102
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 115

   56 whileStmt: T_WHILE '(' . expr ')' stmt

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 149
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 116

   53 ifStmt: T_IF '(' . expr ')' stmt optElse

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 150
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 117

   58 returnStmt: T_RETURN optExpr . ';'

    ';'  shift, and go to state 151


state 118

   59 breakStmt: T_BREAK ';' .

    $default  reduce using rule 59 (breakStmt)


state 119

   86 expr: T_NEW T_ID .

    $default  reduce using rule 86 (expr)


state 120

   87 expr: T_NEWARRAY '(' . expr ',' type ')'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 152
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 121

   60 printStmt: T_PRINT '(' . expr csExpr ')' ';'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 153
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 122

   84 expr: T_READINTEGER '(' . ')'

    ')'  shift, and go to state 154


state 123

   85 expr: T_READLINE '(' . ')'

    ')'  shift, and go to state 155


state 124

   40 stmtBlock: '{' variableDecls stmts '}' .

    $default  reduce using rule 40 (stmtBlock)


state 125

   42 stmts: stmt stmts .

    $default  reduce using rule 42 (stmts)


state 126

   43 stmt: optExpr ';' .

    $default  reduce using rule 43 (stmt)


state 127

   82 expr: expr T_OR . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 156
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 128

   81 expr: expr T_AND . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 157
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 129

   80 expr: expr T_NEQ . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 158
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 130

   79 expr: expr T_EQ . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 159
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 131

   75 expr: expr '<' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 160
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 132

   77 expr: expr '>' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 161
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 133

   78 expr: expr T_BEQ . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 162
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 134

   76 expr: expr T_LEQ . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 163
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 135

   69 expr: expr '+' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 164
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 136

   70 expr: expr '-' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 165
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 137

   71 expr: expr '*' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 166
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 138

   72 expr: expr '/' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 167
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 139

   73 expr: expr '%' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 168
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 140

   90 lvalue: expr '[' . expr ']'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 169
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 141

   89 lvalue: expr '.' . T_ID
   92 call: expr '.' . T_ID '(' actuals ')'

    T_ID  shift, and go to state 170


state 142

   63 expr: lvalue '=' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 171
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 143

   39 prototype: T_VOID T_ID '(' formals ')' ';' .

    $default  reduce using rule 39 (prototype)


state 144

   38 prototype: type T_ID '{' formals '}' ';' .

    $default  reduce using rule 38 (prototype)


state 145

   68 expr: '(' expr ')' .

    $default  reduce using rule 68 (expr)


state 146

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'
   94 actuals: expr . csExpr

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 61 (csExpr)

    csExpr  go to state 172


state 147

   91 call: T_ID '(' actuals . ')'

    ')'  shift, and go to state 173


state 148

   57 forStmt: T_FOR '(' optExpr . ';' expr ';' optExpr ')' stmt

    ';'  shift, and go to state 174


state 149

   56 whileStmt: T_WHILE '(' expr . ')' stmt
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141
    ')'    shift, and go to state 175


state 150

   53 ifStmt: T_IF '(' expr . ')' stmt optElse
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141
    ')'    shift, and go to state 176


state 151

   58 returnStmt: T_RETURN optExpr ';' .

    $default  reduce using rule 58 (returnStmt)


state 152

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   87     | T_NEWARRAY '(' expr . ',' type ')'
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141
    ','    shift, and go to state 177


state 153

   60 printStmt: T_PRINT '(' expr . csExpr ')' ';'
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 61 (csExpr)

    csExpr  go to state 178


state 154

   84 expr: T_READINTEGER '(' ')' .

    $default  reduce using rule 84 (expr)


state 155

   85 expr: T_READLINE '(' ')' .

    $default  reduce using rule 85 (expr)


state 156

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   82     | expr T_OR expr .
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 82 (expr)


state 157

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   81     | expr T_AND expr .
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 81 (expr)


state 158

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   80     | expr T_NEQ expr .
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 80 (expr)


state 159

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   79     | expr T_EQ expr .
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 79 (expr)


state 160

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   75     | expr '<' expr .
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '+'  shift, and go to state 135
    '-'  shift, and go to state 136
    '*'  shift, and go to state 137
    '/'  shift, and go to state 138
    '%'  shift, and go to state 139
    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 75 (expr)


state 161

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   77     | expr '>' expr .
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '+'  shift, and go to state 135
    '-'  shift, and go to state 136
    '*'  shift, and go to state 137
    '/'  shift, and go to state 138
    '%'  shift, and go to state 139
    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 77 (expr)


state 162

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   78     | expr T_BEQ expr .
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '+'  shift, and go to state 135
    '-'  shift, and go to state 136
    '*'  shift, and go to state 137
    '/'  shift, and go to state 138
    '%'  shift, and go to state 139
    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 78 (expr)


state 163

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   76     | expr T_LEQ expr .
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '+'  shift, and go to state 135
    '-'  shift, and go to state 136
    '*'  shift, and go to state 137
    '/'  shift, and go to state 138
    '%'  shift, and go to state 139
    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 76 (expr)


state 164

   69 expr: expr . '+' expr
   69     | expr '+' expr .
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '*'  shift, and go to state 137
    '/'  shift, and go to state 138
    '%'  shift, and go to state 139
    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 69 (expr)


state 165

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   70     | expr '-' expr .
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '*'  shift, and go to state 137
    '/'  shift, and go to state 138
    '%'  shift, and go to state 139
    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 70 (expr)


state 166

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   71     | expr '*' expr .
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 71 (expr)


state 167

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   72     | expr '/' expr .
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 72 (expr)


state 168

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   73     | expr '%' expr .
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    '['  shift, and go to state 140
    '.'  shift, and go to state 141

    $default  reduce using rule 73 (expr)


state 169

   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   90       | expr '[' expr . ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141
    ']'    shift, and go to state 179


state 170

   89 lvalue: expr '.' T_ID .
   92 call: expr '.' T_ID . '(' actuals ')'

    '('  shift, and go to state 180

    $default  reduce using rule 89 (lvalue)


state 171

   63 expr: lvalue '=' expr .
   69     | expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 63 (expr)


state 172

   62 csExpr: csExpr . ',' expr
   94 actuals: expr csExpr .

    ','  shift, and go to state 181

    $default  reduce using rule 94 (actuals)


state 173

   91 call: T_ID '(' actuals ')' .

    $default  reduce using rule 91 (call)


state 174

   57 forStmt: T_FOR '(' optExpr ';' . expr ';' optExpr ')' stmt

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 182
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 175

   56 whileStmt: T_WHILE '(' expr ')' . stmt

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_FOR             shift, and go to state 77
    T_WHILE           shift, and go to state 78
    T_IF              shift, and go to state 79
    T_RETURN          shift, and go to state 80
    T_BREAK           shift, and go to state 81
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_PRINT           shift, and go to state 84
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90
    '{'               shift, and go to state 54

    $default  reduce using rule 51 (optExpr)

    stmtBlock   go to state 92
    stmt        go to state 183
    optExpr     go to state 95
    ifStmt      go to state 96
    whileStmt   go to state 97
    forStmt     go to state 98
    returnStmt  go to state 99
    breakStmt   go to state 100
    printStmt   go to state 101
    expr        go to state 102
    lvalue      go to state 103
    call        go to state 104
    constant    go to state 105


state 176

   53 ifStmt: T_IF '(' expr ')' . stmt optElse

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_FOR             shift, and go to state 77
    T_WHILE           shift, and go to state 78
    T_IF              shift, and go to state 79
    T_RETURN          shift, and go to state 80
    T_BREAK           shift, and go to state 81
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_PRINT           shift, and go to state 84
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90
    '{'               shift, and go to state 54

    $default  reduce using rule 51 (optExpr)

    stmtBlock   go to state 92
    stmt        go to state 184
    optExpr     go to state 95
    ifStmt      go to state 96
    whileStmt   go to state 97
    forStmt     go to state 98
    returnStmt  go to state 99
    breakStmt   go to state 100
    printStmt   go to state 101
    expr        go to state 102
    lvalue      go to state 103
    call        go to state 104
    constant    go to state 105


state 177

   87 expr: T_NEWARRAY '(' expr ',' . type ')'

    T_ID      shift, and go to state 1
    T_INT     shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_BOOL    shift, and go to state 5
    T_STRING  shift, and go to state 6

    type  go to state 185


state 178

   60 printStmt: T_PRINT '(' expr csExpr . ')' ';'
   62 csExpr: csExpr . ',' expr

    ')'  shift, and go to state 186
    ','  shift, and go to state 181


state 179

   90 lvalue: expr '[' expr ']' .

    $default  reduce using rule 90 (lvalue)


state 180

   92 call: expr '.' T_ID '(' . actuals ')'

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    $default  reduce using rule 93 (actuals)

    expr      go to state 146
    lvalue    go to state 103
    call      go to state 104
    actuals   go to state 187
    constant  go to state 105


state 181

   62 csExpr: csExpr ',' . expr

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    expr      go to state 188
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 182

   57 forStmt: T_FOR '(' optExpr ';' expr . ';' optExpr ')' stmt
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141
    ';'    shift, and go to state 189


state 183

   56 whileStmt: T_WHILE '(' expr ')' stmt .

    $default  reduce using rule 56 (whileStmt)


state 184

   53 ifStmt: T_IF '(' expr ')' stmt . optElse

    T_ELSE  shift, and go to state 190

    T_ELSE    [reduce using rule 54 (optElse)]
    $default  reduce using rule 54 (optElse)

    optElse  go to state 191


state 185

   17 type: type . PAIREDBRACES
   87 expr: T_NEWARRAY '(' expr ',' type . ')'

    PAIREDBRACES  shift, and go to state 24
    ')'           shift, and go to state 192


state 186

   60 printStmt: T_PRINT '(' expr csExpr ')' . ';'

    ';'  shift, and go to state 193


state 187

   92 call: expr '.' T_ID '(' actuals . ')'

    ')'  shift, and go to state 194


state 188

   62 csExpr: csExpr ',' expr .
   69 expr: expr . '+' expr
   70     | expr . '-' expr
   71     | expr . '*' expr
   72     | expr . '/' expr
   73     | expr . '%' expr
   75     | expr . '<' expr
   76     | expr . T_LEQ expr
   77     | expr . '>' expr
   78     | expr . T_BEQ expr
   79     | expr . T_EQ expr
   80     | expr . T_NEQ expr
   81     | expr . T_AND expr
   82     | expr . T_OR expr
   89 lvalue: expr . '.' T_ID
   90       | expr . '[' expr ']'
   92 call: expr . '.' T_ID '(' actuals ')'

    T_OR   shift, and go to state 127
    T_AND  shift, and go to state 128
    T_NEQ  shift, and go to state 129
    T_EQ   shift, and go to state 130
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    T_BEQ  shift, and go to state 133
    T_LEQ  shift, and go to state 134
    '+'    shift, and go to state 135
    '-'    shift, and go to state 136
    '*'    shift, and go to state 137
    '/'    shift, and go to state 138
    '%'    shift, and go to state 139
    '['    shift, and go to state 140
    '.'    shift, and go to state 141

    $default  reduce using rule 62 (csExpr)


state 189

   57 forStmt: T_FOR '(' optExpr ';' expr ';' . optExpr ')' stmt

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90

    $default  reduce using rule 51 (optExpr)

    optExpr   go to state 195
    expr      go to state 102
    lvalue    go to state 103
    call      go to state 104
    constant  go to state 105


state 190

   55 optElse: T_ELSE . stmt

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_FOR             shift, and go to state 77
    T_WHILE           shift, and go to state 78
    T_IF              shift, and go to state 79
    T_RETURN          shift, and go to state 80
    T_BREAK           shift, and go to state 81
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_PRINT           shift, and go to state 84
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90
    '{'               shift, and go to state 54

    $default  reduce using rule 51 (optExpr)

    stmtBlock   go to state 92
    stmt        go to state 196
    optExpr     go to state 95
    ifStmt      go to state 96
    whileStmt   go to state 97
    forStmt     go to state 98
    returnStmt  go to state 99
    breakStmt   go to state 100
    printStmt   go to state 101
    expr        go to state 102
    lvalue      go to state 103
    call        go to state 104
    constant    go to state 105


state 191

   53 ifStmt: T_IF '(' expr ')' stmt optElse .

    $default  reduce using rule 53 (ifStmt)


state 192

   87 expr: T_NEWARRAY '(' expr ',' type ')' .

    $default  reduce using rule 87 (expr)


state 193

   60 printStmt: T_PRINT '(' expr csExpr ')' ';' .

    $default  reduce using rule 60 (printStmt)


state 194

   92 call: expr '.' T_ID '(' actuals ')' .

    $default  reduce using rule 92 (call)


state 195

   57 forStmt: T_FOR '(' optExpr ';' expr ';' optExpr . ')' stmt

    ')'  shift, and go to state 197


state 196

   55 optElse: T_ELSE stmt .

    $default  reduce using rule 55 (optElse)


state 197

   57 forStmt: T_FOR '(' optExpr ';' expr ';' optExpr ')' . stmt

    '-'               shift, and go to state 71
    '!'               shift, and go to state 72
    '('               shift, and go to state 73
    T_ID              shift, and go to state 109
    T_NULL            shift, and go to state 75
    T_THIS            shift, and go to state 76
    T_FOR             shift, and go to state 77
    T_WHILE           shift, and go to state 78
    T_IF              shift, and go to state 79
    T_RETURN          shift, and go to state 80
    T_BREAK           shift, and go to state 81
    T_NEW             shift, and go to state 82
    T_NEWARRAY        shift, and go to state 83
    T_PRINT           shift, and go to state 84
    T_READINTEGER     shift, and go to state 85
    T_READLINE        shift, and go to state 86
    T_INTCONSTANT     shift, and go to state 87
    T_DOUBLECONSTANT  shift, and go to state 88
    T_STRINGCONSTANT  shift, and go to state 89
    T_BOOLCONSTANT    shift, and go to state 90
    '{'               shift, and go to state 54

    $default  reduce using rule 51 (optExpr)

    stmtBlock   go to state 92
    stmt        go to state 198
    optExpr     go to state 95
    ifStmt      go to state 96
    whileStmt   go to state 97
    forStmt     go to state 98
    returnStmt  go to state 99
    breakStmt   go to state 100
    printStmt   go to state 101
    expr        go to state 102
    lvalue      go to state 103
    call        go to state 104
    constant    go to state 105


state 198

   57 forStmt: T_FOR '(' optExpr ';' expr ';' optExpr ')' stmt .

    $default  reduce using rule 57 (forStmt)
